// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"kraots-xa/configs"
	"kraots-xa/internal/conf"
	"kraots-xa/internal/control"
	"kraots-xa/internal/dao"
	"kraots-xa/internal/service"
)

// Injectors from wire.go:

func WireApp(allConfig *configs.AllConfig) *conf.KratosServer {
	logger := conf.NewZapConfig(allConfig)
	server := conf.NewGrpcServer(logger, allConfig)
	httpServer := conf.NewHttpServer(logger, allConfig)
	registry := conf.NewKratosEtcdClient(logger, allConfig)
	userAccountDaoImp := &dao.UserAccountDaoImp{
		Logger: logger,
	}
	userAccountSvcImp := &service.UserAccountSvcImp{
		UserAccountDao: userAccountDaoImp,
		Logger:         logger,
	}
	userAccountControl := controller.NewUserAccountControl(server, httpServer, logger, allConfig, userAccountSvcImp)
	kratosServer := &conf.KratosServer{
		Logger:             logger,
		GrpcServer:         server,
		HttpServer:         httpServer,
		KratosEtcdClient:   registry,
		AllConfig:          allConfig,
		UserAccountControl: userAccountControl,
	}
	return kratosServer
}
